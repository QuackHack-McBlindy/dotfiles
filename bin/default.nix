# dotfiles/bin/default.nix â®ž https://github.com/quackhack-mcblindy/dotfiles
{ # ðŸ¦† duck say â®ž dis file just sets simple helpers and auto imports all scripts
    self,
    config,
    lib,
    pkgs,
    ...
} : let # ðŸ¦† duck say â®ž grabbin' some of dat sweet sweet nix option for fancy fancy configz
  inherit (lib) types mkOption mkEnableOption mkMerge;
  # ðŸ¦† duck say â®ž recursive nix importer â€” let'z waddle throu' them dirz through the reeds
  importModulesRecursive = dir: 
    let
      entries = builtins.readDir dir;# ðŸ¦† duck say â®ž read all files & subfolders in dir i say no duck left behind
      modules = lib.attrsets.mapAttrsToList (name: type: # ðŸ¦† duck say â®ž map over entries, check if directory or nix file
        let path = dir + "/${name}"; # ðŸ¦† duck say â®ž build path quackfully
        in if type == "directory" then
          importModulesRecursive path # ðŸ¦† duck say â®ž dive down the directory pond recursively
        else if lib.hasSuffix ".nix" name then
          [ path ] # ðŸ¦† duck say â®ž found nix file! add it to da list, quack yees
        else
          [] # ðŸ¦† duck say â®ž no nix file? no worries move along little ducky
      ) entries;
    in lib.flatten modules; # ðŸ¦† duck say â®ž flatten list of lists go single list - no nested duck nestz here

  # ðŸ¦† duck say â®ž list all hostz â€” all ducks in the pond
  sysHosts = lib.attrNames self.nixosConfigurations;
  # ðŸ¦† duck say â®ž list all devShells â€” ducklingz ready to hatch dem dev env
  sysDevShells = lib.attrNames self.devShells; 
  
  # ðŸ¦† duck say â®ž stash house for massive amounts of helper functions for yo scripts
  cmdHelpers = import ./helpers.nix {
    inherit config lib pkgs self sysHosts sysDevShells;
  };
in { # ðŸ¦† duck say â®ž import everythang in defined directories
    imports = builtins.map (file: import file {
        inherit self config lib cmdHelpers pkgs sysHosts;
    }) (
        importModulesRecursive ./config ++   # ðŸ¦† duck say â®ž ++
        importModulesRecursive ./system ++    # ðŸ¦† duck say â®ž ++
        importModulesRecursive ./home ++    # ðŸ¦† duck say â®ž ++
        importModulesRecursive ./security ++   # ðŸ¦† duck say â®ž ++
        importModulesRecursive ./maintenance ++ # ðŸ¦† duck say â®ž +++++ plus plus plus rots of duck's give lot'z of luck
        importModulesRecursive ./productivity ++
        importModulesRecursive ./network ++
        importModulesRecursive ./media ++        
        importModulesRecursive ./misc # ðŸ¦† duck say â®ž enuff enuff dis iz last you have ducks word on dat        
    );} # ðŸ¦† duck say â®ž bye!
