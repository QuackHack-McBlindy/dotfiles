#!/bin/bash
# Returns weather report.


# Weather Codes mapping
declare -A WEATHER_CODES
WEATHER_CODES=(
    [113]="☀️" [116]="⛅" [119]="☁️" [122]="☁️" [143]="☁️"
    [176]="🌧️" [179]="🌧️" [182]="🌧️" [185]="🌧️" [200]="⛈️"
    [227]="🌨️" [230]="🌨️" [248]="☁️" [260]="☁️" [263]="🌧️"
    [266]="🌧️" [281]="🌧️" [284]="🌧️" [293]="🌧️" [296]="🌧️"
    [299]="🌧️" [302]="🌧️" [305]="🌧️" [308]="🌧️" [311]="🌧️"
    [314]="🌧️" [317]="🌧️" [320]="🌨️" [323]="🌨️" [326]="🌨️"
    [329]="❄️" [332]="❄️" [335]="❄️" [338]="❄️" [350]="🌧️"
    [353]="🌧️" [356]="🌧️" [359]="🌧️" [362]="🌧️" [365]="🌧️"
    [368]="🌧️" [371]="❄️" [374]="🌨️" [377]="🌨️" [386]="🌨️"
    [389]="🌨️" [392]="🌧️" [395]="❄️"
)

# Fetch weather data
weather=$(curl -s "https://wttr.in/?format=j1")

# Parse current weather data
current_condition=$(echo "$weather" | jq '.current_condition[0]')
weather_code=$(echo "$current_condition" | jq -r '.weatherCode')
temp_feels_like=$(echo "$current_condition" | jq -r '.FeelsLikeC')
weather_desc=$(echo "$current_condition" | jq -r '.weatherDesc[0].value')
windspeed=$(echo "$current_condition" | jq -r '.windspeedKmph')
humidity=$(echo "$current_condition" | jq -r '.humidity')

# Format the current weather output
text=" ${WEATHER_CODES[$weather_code]} ${temp_feels_like}°"
tooltip="<b>${weather_desc} ${temp_feels_like}°</b>\n"
tooltip+="Wind: ${windspeed} km/h\n"
tooltip+="Humidity: ${humidity}%\n"

# Iterate over forecast data (Today and Tomorrow)
forecast=""
for i in $(seq 0 1); do
    day=$(echo "$weather" | jq -r ".weather[$i]")
    date=$(echo "$day" | jq -r '.date')
    max_temp=$(echo "$day" | jq -r '.maxtempF')
    min_temp=$(echo "$day" | jq -r '.mintempF')
    
    if [ $i -eq 0 ]; then
        forecast="Today, $date: ⬆️ $max_temp° ⬇️ $min_temp°"
    else
        forecast="Tomorrow, $date: ⬆️ $max_temp° ⬇️ $min_temp°"
    fi
done

# Output the result
#echo "$text"
#echo "$tooltip"
#echo "$forecast"



# Clean up: Remove HTML tags, the literal '\n' string, and unwanted spaces
cleaned_text=$(echo "$text" | sed 's/<[^>]*>//g' | sed 's/\\n/\n/g' | sed 's/\s\+/ /g')
cleaned_tooltip=$(echo "$tooltip" | sed 's/<[^>]*>//g' | sed 's/\\n/\n/g' | sed 's/\s\+/ /g')
cleaned_forecast=$(echo "$forecast" | sed 's/<[^>]*>//g' | sed 's/\\n/\n/g' | sed 's/\s\+/ /g')

# Output the cleaned variables
echo "$cleaned_text"
echo "$cleaned_tooltip"
#echo "$cleaned_forecast"
