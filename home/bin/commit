#!/bin/sh

# This script is used to write a conventional commit message.
# It allows the user to select files with Gum, choose a commit type, and input
# a summary and detailed description for a commit message.

# Function to select files and handle directories
select_files() {
  FILES=""
  while true; do
    # List files and directories in the current directory
    SELECTED=$(gum choose "Select files to stage" $(ls))
    
    # If the user selected a directory, cd into it and prompt again
    if [ -d "$SELECTED" ]; then
      cd "$SELECTED" || return 1  # cd into the directory
      gum style --foreground 226 "Now in directory: $(pwd)"
      continue
    fi
    
    # If the selected file is not a directory, add it to the list of staged files
    if [ -n "$SELECTED" ]; then
      FILES="$FILES $SELECTED"
    fi
    
    # Ask if the user wants to select more files
    gum confirm "Would you like to select more files?" || break
  done
}

# Prompt user to select files to add using gum choose (multi-step for directories)
select_files

# If no files were selected, exit early
if [ -z "$FILES" ]; then
  gum style --foreground 196 "No files selected. Exiting."
  exit 1
fi

# Stage the selected files
git add $FILES

# Let the user select the type of commit (e.g., feat, fix, docs, etc.)
TYPE=$(gum choose "fix" "feat" "docs" "style" "refactor" "test" "chore" "revert")

# Let the user input the optional scope for the commit
SCOPE=$(gum input --placeholder "scope")

# Since the scope is optional, wrap it in parentheses if it has a value
test -n "$SCOPE" && SCOPE="($SCOPE)"

# Pre-populate the input with the type(scope): so that the user may change it
SUMMARY=$(gum input --value "$TYPE$SCOPE: " --placeholder "Summary of this change")
DESCRIPTION=$(gum write --placeholder "Details of this change")

# Display a confirmation page with a summary of the commit
gum style --foreground 219 --border-foreground 219 --border double \
  --align center --width 60 --margin "1 2" --padding "2 4" \
  "Summary: $SUMMARY" \
  "Files staged: $FILES" \
  "Details: $DESCRIPTION"

# Ask for confirmation to proceed with the commit
gum confirm "Commit these changes?" && git commit -m "$SUMMARY" -m "$DESCRIPTION"
