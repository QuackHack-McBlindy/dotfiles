#!/bin/bash
# [ Updates age keys for all host machines ]
# ------------------------

set -euo pipefail  # Ensure strict error handling

# Define directories
HOSTS_DIR="./hosts"
AGE_CONFIG_DIR="$HOME/.config/age"
SECRETS_DIR="$HOME/dotfiles/secrets/hosts"
AGEKEYS_NIX_FILE="$HOSTS_DIR/agekeys.nix"

# File Decryption Using Yubikey & Age
encrypt() {
  local filepath="$1"
  local decrypted_filepath="${filepath}_DECRYPTED"  # Rename the file to add _DECRYPTED suffix
  mv "$filepath" "$decrypted_filepath"
  if rage -r age1yubikey1q0ek47e26sg9eej2xlvxj308fgw8h8ajgx6ucagjzlm9tzgxtckdw35eg0m -o "$filepath" "$decrypted_filepath"; then
    rm -f "$decrypted_filepath"
    echo -e "\033[1;32m\033[5mSuccessfully encrypted \033[1;31m$filepath\033[0m \033[5m\033[1;32m!"
  else
    echo -e "\033[1;31mError: Encryption failed for \033[1;37m$filepath\033[0m"
  fi
}

# Ensure necessary directories exist
mkdir -p "$AGE_CONFIG_DIR"
mkdir -p "$SECRETS_DIR"

# Backup existing agekeys.nix before modification
if [[ -f "$AGEKEYS_NIX_FILE" ]]; then
    cp "$AGEKEYS_NIX_FILE" "$AGEKEYS_NIX_FILE.bak"
fi

echo "{" > "$AGEKEYS_NIX_FILE"

# Iterate over host directories
for host in "$HOSTS_DIR"/*/; do
    host=$(basename "$host")  # Extract directory name as hostname

    # Ensure necessary directories exist
    mkdir -p "$AGE_CONFIG_DIR/$host"
    mkdir -p "$SECRETS_DIR/$host"

    # Generate or reuse existing age key
    KEY_PATH="$AGE_CONFIG_DIR/$host/key.txt"
    if [[ ! -f "$KEY_PATH" ]]; then
        age-keygen -o "$KEY_PATH"
    fi

    # Extract only the public key
    PUB_KEY=$(grep -o 'age1[[:alnum:]]*' "$KEY_PATH")
    echo "  $host = \"$PUB_KEY\";" >> "$AGEKEYS_NIX_FILE"

    # Encrypt private key only if not already encrypted
    ENCRYPTED_KEY_PATH="$SECRETS_DIR/$host/age.key"
    if [[ ! -f "$ENCRYPTED_KEY_PATH" || "$KEY_PATH" -nt "$ENCRYPTED_KEY_PATH" ]]; then
        encrypt "$KEY_PATH"
        mv "$KEY_PATH" "$ENCRYPTED_KEY_PATH"
    fi

done

echo "}" >> "$AGEKEYS_NIX_FILE"

echo "Age keys setup and maintenance completed successfully."
