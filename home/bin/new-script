#!/bin/bash

# Check if the script is run as root
if [ "$EUID" -ne 0 ]; then
  echo -e "\033[1;31m[ERROR]\033[0m YO SUDO PLZ!"
  exit 1
fi


# Ensure gum is installed
if ! command -v gum &>/dev/null; then
  echo "Gum is not installed. Please install it first: https://github.com/charmbracelet/gum"
  exit 1
fi

# Prompt for script type
script_type=$(gum choose "bash" "python" "other")

# Prompt for script name
script_name=$(gum input --placeholder "Enter script name (without extension)")

# Determine the full script path
script_path="/home/pungkula/dotfiles/home/bin/${script_name}"

# Set the shebang based on the script type
if [[ "$script_type" == "bash" ]]; then
  shebang="#!/bin/bash"
  additional_lines="# [ Description Here! ]"
  separator_line="# ------------------------"
elif [[ "$script_type" == "python" ]]; then
  shebang="#!/usr/bin/env python3"
  additional_lines="# [ Description Here! ]"
  separator_line="# ------------------------"
else
  shebang="#!/usr/bin/env sh"
  additional_lines="# [ Description Here! ]"
  separator_line="# ------------------------"
fi

# Create the script with the appropriate structure
echo "$shebang" > "$script_path"  # Write the shebang to the file
echo "$additional_lines" >> "$script_path"  # Append the description line
echo "$separator_line" >> "$script_path"  # Append the separator line

# Optional: Add actual script content here (use $script_content or whatever you want)
echo "[ Script Here! ]" >> "$script_path"  # Add placeholder for the script content


# Open the script in nano
nano "$script_path"

# Make the script executable
chmod +x "$script_path"

# Add the path to ~/.bashrc if not already added
if ! grep -q "/home/pungkula/dotfiles/home/bin" ~/.bashrc; then
  echo 'export PATH="/home/pungkula/dotfiles/home/bin:$PATH"' >>~/.bashrc
fi

# Source ~/.bashrc to apply changes
source ~/.bashrc

# Inform the user
gum style --foreground 212 "Script created and made executable: $script_path"
gum style --bold "Path added to your environment and sourced!"
