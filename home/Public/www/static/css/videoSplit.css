/* Glowing split box */
.split-box {
    position: absolute;
    top: 50%;
    left: 0;
    width: 100%;
    height: 0; /* This height will increase during the split animation */
    background-color: rgba(0, 0, 0, 0.7); /* Changed color to ensure visibility */
    box-shadow: 0 0 20px rgba(255, 255, 255, 0.7); /* Glowing effect */
    transition: height 2s ease;
    z-index: 0; /* Ensure itâ€™s above the player sections */
}


.player-top, .player-bottom {
    z-index: -2; /* Keep these sections under the split-box */
}

/* Player sections */
.player-top {
    transition: transform 2s ease;
    position: relative;
    z-index: 2;
}

.player-bottom {
    transition: transform 2s ease;
    position: relative;
    z-index: -2;
}

/* Split animation */
.player-split .player-top {
    transform: translateY(-100%); /* Move top upwards */
}

.player-split .player-bottom {
    transform: translateY(100%); /* Move bottom downwards */
}

.player-split .split-box {
    height: 300px; /* Increase the height to check if it's visible */
}

#video {
    z-index: 5;
}

/* Add a "falling" animation to the container */
@keyframes fallRight {
    0% {
        transform: rotate(0) translateX(0);
        opacity: 1;
    }
    100% {
        transform: rotate(90deg) translateX(100px); /* Adjust angle and distance as needed */
        opacity: 1;
    }
}
/* Apply fall animation to playerContainer */
#playerContainer.fall-right {
    animation: fallRight 0.5s ease-out forwards; /* Fall right animation */
} 




/* Rotate the video 90 degrees when playerContainer falls */

/* Rotate and resize the video element when container falls */


/* Add a "falling" animation to the container */
@keyframes fallLeft {
    0% {
        transform: rotate(0) translateX(0) scale(1.0);
        opacity: 1;
    }
    100% {
        transform: rotate(-90deg) translateX(20px) scale(1.3); /* Adjust angle and distance as needed */
        opacity: 1;
    }
}
video.fall-left {
    animation: fallLeft 0.5s ease-out forwards; /* Fall right animation */
}

/* Apply fall animation to playerContainer */
#playerContainer.fall-left {
    animation: fallLeft 0.5s ease-out forwards; /* Fall left animation */
}






.player-bottom {
    transition: transform 2s ease;
    position: relative;
    z-index: -2;
}

.player-top {
    transition: transform 2s ease;
    position: relative;
    z-index: -2;
}

/* Horizontal Split animation */
.player-splitt .player-bottom {
    transform: translateX(-100%); /* Move left side to the left */
}

.player-splitt .player-top {
    transform: translateX(100%); /* Move right side to the right */
}

.player-splitt .split-box {
    width: 300px; /* Increase the width to check if it's visible */
    z-index: -1;
}

@keyframes scaleUp {
    0% {
        transform: scale(1); /* Start at the original size */
        opacity: 1;
    }
    100% {
        transform: scale(1.3); /* Scale up by 20% */
        opacity: 1;
    }
}

video.scale-up {
    animation: scaleUp 3s ease-out forwards; /* Adjust duration as needed */
}


@keyframes slideDownVolume {
    0% {
        transform: translateY(-100%); /* Start off-screen above */
        opacity: 0;
    }
    100% {
        transform: translateY(0); /* End in original position */
        opacity: 1;
    }
}

.volume-slider.slide-down {
    animation: slideDownVolume 4.5s ease-out forwards; /* Adjust timing as needed */
}

@keyframes slideDownControls {
    0% {
        transform: translateY(-100%); /* Start off-screen above */
        opacity: 0; /* Optional: fade in as it slides */
    }
    100% {
        transform: translateY(0); /* End in the original position */
        opacity: 1;
    }
}

.controls.slide-down {
    animation: slideDownControls 4.5s ease-out forwards; /* Adjust timing as needed */
}
